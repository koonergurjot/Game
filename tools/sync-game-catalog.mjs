import { readFile, writeFile } from 'node:fs/promises';
import path from 'node:path';
import { fileURLToPath } from 'node:url';
import { normalizeCatalogEntries } from '../shared/game-catalog-core.js';

const rootDir = path.resolve(path.dirname(fileURLToPath(import.meta.url)), '..');
const gamesPath = path.join(rootDir, 'games.json');
const offlinePath = path.join(rootDir, 'data', 'games-offline.js');

async function readGames() {
  const source = await readFile(gamesPath, 'utf8');
  const parsed = JSON.parse(source);
  if (!Array.isArray(parsed)) {
    throw new Error('games.json must contain an array');
  }
  return parsed;
}

function buildOfflineModule(games) {
  const header = '// Auto-generated by tools/sync-game-catalog.mjs. Do not edit manually.\n';
  const body = `export const games = ${JSON.stringify(games, null, 2)};\nexport default games;\n`;
  return header + body;
}

async function main() {
  const games = await readGames();
  await writeFile(offlinePath, buildOfflineModule(games));
  const normalized = normalizeCatalogEntries(games);

  console.log(`Game catalog artifacts updated (offline catalog refreshed, ${normalized.length} entries validated).`);
}

main().catch(err => {
  console.error(err);
  process.exitCode = 1;
});
