const c=document.getElementById('c');fitCanvasToParent(c,900,900,24);addEventListener('resize',()=>fitCanvasToParent(c,900,900,24));const ctx=c.getContext('2d');const N=32;const CELL=c.width/N;let dir={x:1,y:0};let lastDir={x:1,y:0};let snake=[{x:5,y:16},{x:4,y:16},{x:3,y:16}];let food=spawnFood();let speedMs=120;let score=0;let dead=false;const GAME_ID='snake';GG.incPlays();const FRUITS=['🍎','🍌','🍇','🍒','🍊','🍉'];let obstacles=[];let fruitIcon='🍎';let paused=false;let level=1;
function togglePause(){paused=!paused}document.addEventListener('keydown',e=>{if(e.key.toLowerCase()==='p')togglePause()});
(function(){let start=null;c.addEventListener('touchstart',e=>{start=e.touches[0]});c.addEventListener('touchmove',e=>{if(!start)return;const t=e.touches[0];const dx=t.clientX-start.clientX,dy=t.clientY-start.clientY; if(Math.abs(dx)+Math.abs(dy)>24){ if(Math.abs(dx)>Math.abs(dy)) dir={x:Math.sign(dx),y:0}; else dir={x:0,y:Math.sign(dy)}; start=t; } e.preventDefault();},{passive:false});c.addEventListener('touchend',()=>start=null);})();
function spawnFood(){fruitIcon=FRUITS[Math.floor(Math.random()*FRUITS.length)];while(true){const f={x:Math.floor(Math.random()*N),y:Math.floor(Math.random()*N)};if(!snake.some(s=>s.x===f.x&&s.y===f.y)&&!obstacles.some(o=>o.x===f.x&&o.y===f.y))return f}}
function addObstacleRow(){const y=Math.floor(Math.random()*N);for(let x=4;x<N-4;x++)obstacles.push({x,y})}
function maybeLevelUp(){if(score&&score%5===0){level=1+Math.floor(score/5);speedMs=Math.max(60,120-level*5);GG.setMeta(GAME_ID,'Best: '+(JSON.parse(localStorage.getItem('gg:lb:'+GAME_ID)||'[]')[0]?.score||score)+' • Lv '+level)}}
function tick(){if(dead||paused)return;const head={x:snake[0].x+dir.x,y:snake[0].y+dir.y};lastDir={...dir};if(head.x<0)head.x=N-1;if(head.x>=N)head.x=0;if(head.y<0)head.y=N-1;if(head.y>=N)head.y=0;if(obstacles.some(o=>o.x===head.x&&o.y===head.y))dead=true;if(snake.some((s,i)=>i>0&&s.x===head.x&&s.y===head.y))dead=true;snake.unshift(head);if(head.x===food.x&&head.y===food.y){score++;GG.addXP(1);SFX.beep({freq:660,dur:0.05});food=spawnFood();maybeLevelUp();}else{snake.pop()}draw();setTimeout(tick,speedMs)}
function draw(){ // particles
  for(let i=particles.length-1;i>=0;i--){ const p=particles[i]; p.x+=p.vx; p.y+=p.vy; p.life--; if(p.life<=0) particles.splice(i,1); }
ctx.fillStyle='#0f1320';ctx.fillRect(0,0,c.width,c.height);ctx.strokeStyle='rgba(255,255,255,0.04)';for(let i=0;i<=N;i++){ctx.beginPath();ctx.moveTo(i*CELL,0);ctx.lineTo(i*CELL,c.height);ctx.stroke();ctx.beginPath();ctx.moveTo(0,i*CELL);ctx.lineTo(c.width,i*CELL);ctx.stroke()}ctx.fillStyle='#22d3ee';ctx.fillRect(food.x*CELL,food.y*CELL,CELL,CELL);ctx.font='24px serif';ctx.fillText(fruitIcon,food.x*CELL+6,food.y*CELL+24);snake.forEach((s,idx)=>{const t=idx/snake.length;ctx.fillStyle=idx===0?'#8b5cf6':`rgba(139,92,246,${0.8-t*0.5})`;ctx.fillRect(s.x*CELL,s.y*CELL,CELL,CELL)});ctx.fillStyle='rgba(255,255,255,0.08)';obstacles.forEach(o=>ctx.fillRect(o.x*CELL,o.y*CELL,CELL,CELL));ctx.fillStyle='#e6e7ea';ctx.font='bold 20px Inter, system-ui, sans-serif';ctx.fillText(`Score: ${score} • Lv ${level}`,16,28);if(score>0&&score%10===0&&obstacles.length<Math.floor(score/10)*(N/2))addObstacleRow();if(paused){ctx.fillStyle='rgba(0,0,0,0.55)';ctx.fillRect(0,0,c.width,c.height);ctx.fillStyle='#e6e7ea';ctx.font='bold 32px Inter';ctx.textAlign='center';ctx.fillText('Paused — P to resume', c.width/2, c.height/2); ctx.textAlign='left';}if(dead){SFX.seq([[200,0.08,0.25],[140,0.1,0.25]]);ctx.fillStyle='rgba(0,0,0,0.6)';ctx.fillRect(0,0,c.width,c.height);ctx.fillStyle='#e6e7ea';ctx.font='bold 42px Inter, system-ui, sans-serif';ctx.textAlign='center';ctx.fillText('You crashed! Press R',c.width/2,c.height/2);ctx.textAlign='left';saveScore(score)}}
function saveScore(s){const key='gg:lb:'+GAME_ID;const lb=JSON.parse(localStorage.getItem(key)||'[]');lb.push({score:s,at:Date.now()});lb.sort((a,b)=>b.score-a.score);const top=lb.slice(0,5);localStorage.setItem(key,JSON.stringify(top));const best=top[0]?.score||0;GG.setMeta(GAME_ID,'Best: '+best);if(s>=20)GG.addAch(GAME_ID,'Fruit Feast')}
document.addEventListener('keydown',e=>{const k=e.key.toLowerCase();if(k==='r'&&dead){dir={x:1,y:0};lastDir={x:1,y:0};snake=[{x:5,y:16},{x:4,y:16},{x:3,y:16}];food=spawnFood();speedMs=120;score=0;dead=false;level=1;draw();setTimeout(tick,speedMs);return}const map={'arrowup':{x:0,y:-1},'w':{x:0,y:-1},'arrowdown':{x:0,y:1},'s':{x:0,y:1},'arrowleft':{x:-1,y:0},'a':{x:-1,y:0},'arrowright':{x:1,y:0},'d':{x:1,y:0}};if(map[k]){const nd=map[k];if(nd.x!==-lastDir.x||nd.y!==-lastDir.y){dir=nd}}});draw();setTimeout(tick,speedMs);
// v5.3: safe fruit spawn & particles
function spawnFruitSafe(){ let tries=0; while(tries++<1000){ const fx=(Math.random()*cols)|0, fy=(Math.random()*rows)|0; if(!snake.some(p=>p.x===fx&&p.y===fy)) return {x:fx,y:fy}; } return {x:1,y:1}; }
let particles=[];
